<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Compiler on Segflow</title><link>https://segflow.github.io/tags/compiler/</link><description>Recent content in Compiler on Segflow</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 28 Apr 2020 13:20:28 +0100</lastBuildDate><atom:link href="https://segflow.github.io/tags/compiler/index.xml" rel="self" type="application/rss+xml"/><item><title>My journey optimizing the Go Compiler</title><link>https://segflow.github.io/post/go-compiler-optimization/</link><pubDate>Tue, 28 Apr 2020 13:20:28 +0100</pubDate><guid>https://segflow.github.io/post/go-compiler-optimization/</guid><description>&lt;p>At &lt;a href="https://edge.network/">EDGE&lt;/a> we write a lot of Go, and we love it for various reasons, one of them being speed. One day I got into a situation where I need to assign an &lt;code>int&lt;/code> to a variable based on another string value.&lt;/p>
&lt;p>Sounds easy right? well yes, but this particular use case awakened the beast in me and made me think what&amp;rsquo;s the &lt;strong>best&lt;/strong> way to do it.&lt;/p>
&lt;p>The journey finished by me contributing to the language compiler and make &lt;code>map&lt;/code> lookups faster.&lt;/p></description></item></channel></rss>